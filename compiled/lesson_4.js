// Generated by CoffeeScript 1.10.0

/*
var greet;

greet = function(name) {
	return "Hello " + name + "!";
};
 */

(function() {
  var func, greet, outer,
    slice = [].slice;

  greet = function(name) {
    return "Hello " + name + "!";
  };

  greet = function(name) {
    return "Hello " + name + "!";
  };

  greet = function() {
    return "Hello " + name + "!";
  };

  greet = function(name) {
    updateSomething();
    changeSomething();
    "Hello " + name + "!";
    return processSomething();
  };

  greet = function(name) {
    if (name) {
      return "hello";
    } else {
      return "goodbye";
    }
  };

  greet = function(name) {
    updateSomething();
    return changeSomething();
    "Hello " + name + "!";
    return processSomething();
  };

  greet = function(name) {
    updateSomething();
    changeSomething();
    "Hello " + name + "!";
    processSomething();
  };

  greet = function(name) {
    if (name == null) {
      name = "UserName";
    }
    updateSomething();
    changeSomething();
    "Hello " + name + "!";
    processSomething();
  };

  greet = function(name, greeting) {
    if (name == null) {
      name = "UserName";
    }
    if (greeting == null) {
      greeting = "Bonjour";
    }
    updateSomething();
    changeSomething();
    "Hello " + name + "!";
    processSomething();
  };

  greet = function() {
    var length, vectors;
    length = arguments[0], vectors = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    updateSomething();
    changeSomething();
    "Hello " + name + "!";
    processSomething();
  };

  outer = 10;

  func = function() {
    var inner;
    outer = 20;
    inner = 20;
  };

  update(object);

  show(update(object, 10, 20));

  show(update(object, 10, 20), "fast");

  show();

  show();

  a + b;

  a + b;

  a + b;

  a(+b);

  (function() {
    return something();
  })();


  /* (function() {
      return something();
    })();
   */

}).call(this);
